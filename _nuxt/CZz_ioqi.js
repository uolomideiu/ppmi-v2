import{m as e}from"./Bq3wrjim.js";import{_ as o}from"./DMkImtA7.js";import"./BtdstHtp.js";describe("ModalDialog.vue",()=>{it("renders correctly",async()=>{const t=e(o,{props:{modalId:"test-dialog"}});await t.vm.$nextTick(),expect(t.exists()).toBe(!0)}),it("uses the modalId prop correctly",async()=>{const t="test-dialog",s=e(o,{props:{modalId:t}});await s.vm.$nextTick(),expect(s.find(".rvt-dialog").attributes("id")).toBe(t),expect(s.find(".rvt-dialog").attributes("data-rvt-dialog")).toBe(t)}),it("renders close button when closeButton prop is true",async()=>{const t=e(o,{props:{modalId:"test-dialog",closeButton:!0}});await t.vm.$nextTick(),expect(t.find(".rvt-dialog__close").exists()).toBe(!0)}),it("does not render close button when closeButton prop is false",async()=>{const t=e(o,{props:{modalId:"test-dialog",closeButton:!1}});await t.vm.$nextTick(),expect(t.find(".rvt-dialog__close").exists()).toBe(!1)}),it("renders default slot content correctly",async()=>{const t=e(o,{props:{modalId:"test-dialog"}});await t.vm.$nextTick(),expect(t.find(".rvt-dialog__title").text()).toBe("Modal title"),expect(t.find(".rvt-dialog__body").text()).toBe("Dialog body")}),it("renders provided slot content correctly",async()=>{const t=e(o,{props:{modalId:"test-dialog"},slots:{title:"Test Title",body:"Test Body"}});await t.vm.$nextTick(),expect(t.find(".rvt-dialog__title").text()).toBe("Test Title"),expect(t.find(".rvt-dialog__body").text()).toBe("Test Body")})});
